#######################################################
# 
# PNoteWin.py
# Python implementation of the Class PNoteWin
# Generated by Enterprise Architect
# Created on:      04-kwi-2020 12:14:38
# Original author: KUBA
# 
#######################################################
from sample.controller.PMainWin import PMainWin
from sample.model.MEncryptor import MEncryptor
from sample.view.VAddNoteWin import VAddNoteWin
from PyQt5 import QtGui, QtCore
from PyQt5.QtWidgets import QListWidgetItem


class PNoteWin(PMainWin):

    def __init__(self, main_window):
        super().__init__(main_window)
        self.add_note_window = VAddNoteWin(self)
        self._encryptor = MEncryptor()

    def add_button_handle(self):
        pass

    def delete_button_handle(self, note):
        pass

    def edit_button_handle(self, name):
        if name == '':
            return
        notes = self.profile.get_notes()
        self._note = notes[name.lower()]
        msg = self.get_msg(self._note)
        self.change_window(self.add_note_window)
        self.add_note_window.set_note(self._note, msg)

    def get_msg(self, note):
        path = note.get_path()
        msg = self._encryptor.decrypt(path, self.profile.get_password())
        return msg

    def save_button_handle(self, note):
        pass

    def _update(self, notes):
        pass

    def add_notes(self, note_list):
        notes = self.profile.get_notes()

        for note in notes.values():
            item = QListWidgetItem()
            item.setSizeHint(QtCore.QSize(150, 150))
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap('view/img/icons/notatki.png'), QtGui.QIcon.Normal,
                           QtGui.QIcon.Off)
            icon.actualSize(QtCore.QSize(99, 98))
            item.setIcon(icon)
            item.setText(note.get_name())
            note_list.addItem(item)
