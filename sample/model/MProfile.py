#######################################################
# 
# MProfile.py
# Python implementation of the Class MProfile
# Generated by Enterprise Architect
# Created on:      04-kwi-2020 11:43:29
# Original author: KUBA
# 
#######################################################
import string


class MProfile:
    NAME_ERROR = -1001
    SURNAME_ERROR = -1002
    EMAIL_ERROR = -1003
    PASSWORD_ERROR = -1005

    def __init__(self, name, surname, email, login, password, passwords={}, notes={}, encrypted_list=[]):
        self._name = name
        self._surname = surname
        self._email = email
        self._login = login
        self._password = password
        self._passwords = passwords
        self._notes = notes
        self._encrypted_list = encrypted_list

    def update(self, update):
        if self._verify(update) == 1:
            self._name = update[0]
            self._surname = update[1]
            self._email = update[2]
            return 1
        else:
            return self._verify(update)

    def _verify(self, update):
        special_symols = '!@#$%^&*()_-+={[}]\:;<,>.?/'
        digits = string.digits
        for c in special_symols + digits:
            if c in update[0]:
                return self.NAME_ERROR
            if c in update[1]:
                return self.SURNAME_ERROR
            if '@' not in update[2]:
                return self.EMAIL_ERROR
        return 1

    def update_password(self, password):
        digits = string.digits
        upper = string.ascii_uppercase
        lower = string.ascii_lowercase
        status = 0
        if len(password) > 8:
            for c in password:
                if c in upper:
                    status = status + 1
                    break
            for c in password:
                if c in lower:
                    status = status + 1
                    break
            for c in password:
                if c in digits:
                    status = status + 1
            if status != 3:
                return False
        else:
            return False
        self._password = password
        return True

    def get_passwords(self):
        return self._passwords

    def get_notes(self):
        return self._notes

    def get_name(self):
        return self._name

    def get_surname(self):
        return self._surname

    def get_email(self):
        return self._email

    def get_login(self):
        return self._login

    def get_password(self):
        return self._password

    def get_encrypted_list(self):
        return self._encrypted_list
